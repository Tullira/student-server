import { Prisma, {{ name }} } from '@prisma/client';
import prisma from '@database';

class {{ properCase name }}Repository {
  async create(data: Prisma.{{ properCase name }}CreateInput): Promise<{{ properCase name }}> {
    const {{ camelCase name }} = await prisma.{{ camelCase name }}.create({ data });
    return {{ camelCase name }};
  }

  async findById(id: string): Promise<{{ properCase name }} | null> {
    const {{ camelCase name }} = await prisma.{{ camelCase name }}.findUnique({ where: { id } });
    return {{ camelCase name }};
  }

  async findAll(): Promise<{{ properCase name }}[] | null> {
    const {{ camelCase name }}s = await prisma.{{ camelCase name }}.findMany();
    return {{ camelCase name }}s as {{ properCase name }}[];
  }

  async update(id: string, data: Prisma.{{ properCase name }}UpdateInput): Promise<{{ properCase name }}> {
    const {{ camelCase name }} = await prisma.{{ camelCase name }}.update({ where: { id }, data });
    return {{ camelCase name }};
  }

  async delete(id: string): Promise<{{ properCase name }}> {
    const {{ camelCase name }} = await prisma.{{ camelCase name }}.delete({ where: { id } });
    return {{ camelCase name }};
  }
}

export default new {{ properCase name }}Repository();
